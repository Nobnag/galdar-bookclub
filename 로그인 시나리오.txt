로그인 페이지에서의 수행
1. 입력받은 아이디, 비밀번호를 로그인 API에 보낸다. 
	1.1 로그인 API를 설계한다.
		1.1.1 
2. 로그인 API에서는 전달받은 아이디, 비밀번호가 DB에 있는지 체크한다.
	2.1. 있으면 로그인 여부를 세션에 저장하고, 로그인 여부를 Y를 리턴한다.
	2.2. 없으면 로그인 여부를 N으로 리턴한다.
3. 로그인 여부가 Y이면 '로그인이 완료되었습니다' 를 안내 한다.
	3.1. 로그인 여부가 N이면 '아이디, 비밀번호가 존재하지 않습니다.
	다시 입력해 주세요' 를 안내한다.

로그인 프로시저의 파라메터

파라메터 이름	데이터 타입	In/Out	설명
Email 	VARCHAR(30)	In	로그인할 사용자 아이디
Pw		VARCHAR(30)	In	로그인할 사용자 아이디의 비밀번호
recordset	INT	Out	로그인 결과 코드

0: 로그인 성공
-1: 사용자 ID 없음
-2: 사용자 ID 있으나 비밀번호 불일치

사용자 ID가 있는지 확인한다.
사용자 ID, 패스워드가 일치하는지 확인한다.
사용자 ID가 없으면, resultCode 아웃 파라메터를 -1로 설정한다.
사용자 ID가 있으나 비밀번호가 일치하지 않으면, resultCode 아웃 파라메터를 -2로 설정한다.
사용자 ID, 비밀번호가 모두 일치하면, resultCode 아웃 파라메터를 0으로 설정한다.

로그인 상태 확인
1. 로그인 상태 API를 호출한다.
2. 로그인 상태 API에서 세션에 저장되어 있는 로그인 여부가 있는지 체크한다.
	2.1. 로그인 여부가 있으면 로그인 여부를 리턴한다.
	2.2. 로그인 여부가 없으면 로그인 여부를 N으로 리턴한다.
3. Front에서 로그인 여부를 가져와서 그에 따라 화면에 출력한다.

로그아웃
1. 로그인 상태를 확인한다.
2. 

타입에 맞춰 gnb 설정

\선언 로그인 오브잭트는 겟 로그인 오브젝트를 포함 하는대 로그인 y일때는


- 쿠키, 세션
- nodejs 로그인 예제, nodejs 세션

sql마다 사용하는 언어? 코드? 가 다르기때문에 검색할때 정확하게
ex) 	nodejs mariadb 연동
	nodejs mariadb
	nodejs mssql 연동
	node mssql

js get parent

로그인 세션 정보를 가지고 회원 관리 페이지에 한줄평, 서평 작성 내역 확인

email 중복x


회원가입 중복검사 api작성